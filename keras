import numpy
import numpy as np
import tensorflow as tf
import keras
import matplotlib as plt
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer

data_train = pd.read_csv('train.csv')
data_test = pd.read_csv('train.csv')
# print(data_test.shape)
# print(data_train.shape)
df1 = data_train.values.reshape(118260)
DF1 = data_test.values.reshape(118260)

df1 = [str(item) for item in df1]
DF1 = [str(item) for item in DF1]


df, df_og = pd.factorize(df1)
DF, DF_og = pd.factorize(DF1)
print(df)


df_tensor = tf.convert_to_tensor(df, np.int32)
DF_tensor = tf.convert_to_tensor(DF, np.int32)


train_x = df
train_y = df
test_x = DF
test_y = DF



model = keras.Sequential([
    keras.layers.Flatten(input_shape=(1, 118260)),
    keras.layers.Dense(128, activation='relu'),
    keras.layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'],)

model.fit(train_x, train_y, epochs=3)

test_loss, test_acc = model.evaluate(test_x, test_y, verbose=1)
print('Test accuracy: ', test_acc)
